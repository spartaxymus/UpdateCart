{"ast":null,"code":"var _jsxFileName = \"/Users/xtaticxeolite/Documents/React/robot-market/frontend/src/components/StockLoad.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCart } from \"react-use-cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StockLoad = ({\n  stockVal\n}) => {\n  _s();\n\n  const {\n    isEmpty,\n    items\n  } = useCart();\n  if (isEmpty) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"In Stock: \", /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: stockVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StockLoad, \"x+Yo7i7BJXWRo6hjHN+fHGwz1Oc=\", false, function () {\n  return [useCart];\n});\n\n_c = StockLoad;\nexport default StockLoad;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockLoad\");","map":{"version":3,"sources":["/Users/xtaticxeolite/Documents/React/robot-market/frontend/src/components/StockLoad.js"],"names":["React","useCart","StockLoad","stockVal","isEmpty","items"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAM;AACFC,IAAAA,OADE;AAEFC,IAAAA;AAFE,MAGFJ,OAAO,EAHX;AAKA,MAAIG,OAAJ,EAAa,oBACT;AAAA,0CAAa;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAIb,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAMD,S;UAIED,O;;;KAJFC,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useCart } from \"react-use-cart\";\n\nconst StockLoad = ({ stockVal }) => {\n    const {\n        isEmpty,\n        items,\n    } = useCart();\n\n    if (isEmpty) return (\n        <p>In Stock: <h4>{stockVal}</h4></p>\n    )\n\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default StockLoad;\n"]},"metadata":{},"sourceType":"module"}